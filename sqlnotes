
CREATE DATABASE ECommerceDB;
USE ECommerceDB;

-- Users Table
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Products Table
CREATE TABLE products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    stock_quantity INT NOT NULL DEFAULT 0,
    vendor_id INT,
    FOREIGN KEY (vendor_id) REFERENCES vendors(vendor_id)
);

-- Orders Table
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    total_amount DECIMAL(10,2) NOT NULL,
    order_status ENUM('Pending', 'Shipped', 'Delivered', 'Cancelled') DEFAULT 'Pending',
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Payments Table
CREATE TABLE payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    user_id INT NOT NULL,
    payment_method ENUM('Credit Card', 'Debit Card', 'PayPal', 'Bank Transfer', 'Cash on Delivery') NOT NULL,
    payment_status ENUM('Pending', 'Completed', 'Failed') DEFAULT 'Pending',
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Purchases Table (Tracks individual product purchases within an order)
CREATE TABLE purchases (
    purchase_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    subtotal DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Vendors Table
CREATE TABLE vendors (
    vendor_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(20),
    address TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Employees Table
CREATE TABLE employees (
    employee_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    role ENUM('Admin', 'Manager', 'Sales', 'Support') NOT NULL,
    hire_date DATE NOT NULL
);


USE ECommerceDB;

-- Insert data into Users Table
INSERT INTO users (first_name, last_name, email, password_hash) VALUES
('John', 'Doe', 'john.doe@example.com', 'hashedpassword1'),
('Alice', 'Smith', 'alice.smith@example.com', 'hashedpassword2'),
('Bob', 'Brown', 'bob.brown@example.com', 'hashedpassword3'),
('Charlie', 'Johnson', 'charlie.johnson@example.com', 'hashedpassword4'),
('David', 'White', 'david.white@example.com', 'hashedpassword5'),
('Emma', 'Wilson', 'emma.wilson@example.com', 'hashedpassword6'),
('Frank', 'Taylor', 'frank.taylor@example.com', 'hashedpassword7'),
('Grace', 'Anderson', 'grace.anderson@example.com', 'hashedpassword8'),
('Henry', 'Moore', 'henry.moore@example.com', 'hashedpassword9'),
('Ivy', 'Clark', 'ivy.clark@example.com', 'hashedpassword10');

-- Insert data into Vendors Table
INSERT INTO vendors (name, email, phone, address) VALUES
('Tech Supplies', 'techsup@example.com', '1234567890', '123 Tech Street, NY'),
('Fashion Hub', 'fashionhub@example.com', '2345678901', '456 Fashion Avenue, LA'),
('Home Essentials', 'homeess@example.com', '3456789012', '789 Home Lane, TX'),
('Gadget World', 'gadgetworld@example.com', '4567890123', '321 Gadget Rd, CA'),
('Food & Beverages', 'foodbevg@example.com', '5678901234', '654 Food Court, FL'),
('Sports Gear', 'sportsgear@example.com', '6789012345', '987 Sports Complex, IL'),
('Kids & Toys', 'kidsntoys@example.com', '7890123456', '741 Toy Park, NV'),
('Automobile Parts', 'autoparts@example.com', '8901234567', '852 Auto Plaza, MI'),
('Book Store', 'bookstore@example.com', '9012345678', '963 Book Street, WA'),
('Music & Instruments', 'musicinst@example.com', '0123456789', '159 Music Lane, OH');

-- Insert data into Products Table
INSERT INTO products (name, description, price, stock_quantity, vendor_id) VALUES
('Laptop', 'High-performance laptop', 1200.00, 50, 1),
('T-Shirt', 'Cotton round-neck t-shirt', 20.00, 200, 2),
('Sofa Set', 'Modern 5-seater sofa', 750.00, 30, 3),
('Smartphone', 'Latest model smartphone', 999.00, 100, 4),
('Coffee Maker', 'Automatic coffee maker', 85.00, 150, 5),
('Football', 'Official size football', 30.00, 80, 6),
('Toy Car', 'Remote-controlled toy car', 40.00, 60, 7),
('Car Battery', 'Long-lasting car battery', 180.00, 40, 8),
('Fiction Book', 'Bestselling fiction novel', 15.00, 300, 9),
('Guitar', 'Acoustic guitar', 120.00, 50, 10);

-- Insert data into Orders Table
INSERT INTO orders (user_id, total_amount, order_status) VALUES
(1, 1220.00, 'Shipped'),
(2, 40.00, 'Pending'),
(3, 750.00, 'Delivered'),
(4, 999.00, 'Cancelled'),
(5, 85.00, 'Shipped'),
(6, 30.00, 'Pending'),
(7, 40.00, 'Delivered'),
(8, 180.00, 'Pending'),
(9, 15.00, 'Shipped'),
(10, 120.00, 'Delivered');

-- Insert data into Payments Table
INSERT INTO payments (order_id, user_id, payment_method, payment_status) VALUES
(1, 1, 'Credit Card', 'Completed'),
(2, 2, 'PayPal', 'Pending'),
(3, 3, 'Debit Card', 'Completed'),
(4, 4, 'Bank Transfer', 'Failed'),
(5, 5, 'Credit Card', 'Completed'),
(6, 6, 'Cash on Delivery', 'Pending'),
(7, 7, 'PayPal', 'Completed'),
(8, 8, 'Bank Transfer', 'Pending'),
(9, 9, 'Debit Card', 'Completed'),
(10, 10, 'Credit Card', 'Completed');

-- Insert data into Purchases Table
INSERT INTO purchases (order_id, product_id, quantity, subtotal) VALUES
(1, 1, 1, 1200.00),
(2, 7, 1, 40.00),
(3, 3, 1, 750.00),
(4, 4, 1, 999.00),
(5, 5, 1, 85.00),
(6, 6, 1, 30.00),
(7, 7, 1, 40.00),
(8, 8, 1, 180.00),
(9, 9, 1, 15.00),
(10, 10, 1, 120.00);

-- Insert data into Employees Table
INSERT INTO employees (first_name, last_name, email, role, hire_date) VALUES
('Michael', 'Scott', 'michael.scott@example.com', 'Admin', '2020-01-15'),
('Jim', 'Halpert', 'jim.halpert@example.com', 'Manager', '2021-03-20'),
('Pam', 'Beesly', 'pam.beesly@example.com', 'Sales', '2019-05-25'),
('Dwight', 'Schrute', 'dwight.schrute@example.com', 'Admin', '2018-07-10'),
('Stanley', 'Hudson', 'stanley.hudson@example.com', 'Sales', '2017-09-30'),
('Angela', 'Martin', 'angela.martin@example.com', 'Support', '2022-06-15'),
('Oscar', 'Martinez', 'oscar.martinez@example.com', 'Manager', '2016-12-05'),
('Kevin', 'Malone', 'kevin.malone@example.com', 'Support', '2019-02-14'),
('Toby', 'Flenderson', 'toby.flenderson@example.com', 'Admin', '2015-11-20'),
('Kelly', 'Kapoor', 'kelly.kapoor@example.com', 'Sales', '2023-08-10');


start transaction;
insert into orders(user_id,total_amount,order_status)
values(3,500.00,'pending');

set @last_order_id=last_insert_id();

insert into payments(order_id,user_id,payment_method,payment_status)
values(@last_order_id,3,'credit card','pending');

commit;


START TRANSACTION;

-- Insert a new order
INSERT INTO orders (user_id, total_amount, order_status) 
VALUES (4, 1200.00, 'Pending');

-- Simulate an error (e.g., incorrect column name)
INSERT INTO payments (order_id, user_id, payment_method, payment_status) 
VALUES (99999, 4, 'Debit Card', 'Completed'); -- Invalid order_id (not in orders table)

-- If an error occurs, rollback the transaction
ROLLBACK;


START TRANSACTION;

-- Insert a new order
INSERT INTO orders (user_id, total_amount, order_status) 
VALUES (5, 700.00, 'Pending');

-- Set a SAVEPOINT
SAVEPOINT before_payment;

-- Insert a payment
INSERT INTO payments (order_id, user_id, payment_method, payment_status) 
VALUES (LAST_INSERT_ID(), 5, 'PayPal', 'Completed');

-- Oops! We realize the wrong payment method was used.
ROLLBACK TO before_payment;

-- Correct the mistake and insert again
INSERT INTO payments (order_id, user_id, payment_method, payment_status) 
VALUES (LAST_INSERT_ID(), 5, 'Credit Card', 'Completed');

-- Commit the final transaction
COMMIT;


